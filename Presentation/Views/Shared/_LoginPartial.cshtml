@using Domain.Entities;
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
      
    @if (User.IsInRole("Admin"))
    {
        <a class="nav-link text-warning " asp-area="Admin" asp-controller="Admin" asp-action="Index">Área do administrador</a>               
    }
           
    var user = await UserManager.GetUserAsync(User);
    <div class="btn-group">
        <button type="button" class="dropdown btn btn-secondary dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
            @user.FirstName
        </button>

        <ul class="dropdown-menu dropdown-menu-end">
            @* @if (User.IsInRole("Admin"))
            {
                <li class="nav-item">

                    <a class="dropdown-item" asp-area="Admin" asp-controller="Admin" asp-action="Index">Admin</a>
                </li>
            } *@
            <li>
                <form method="get" asp-controller="Account" asp-action="ConfirmEmail">
                    <button type="submit" class="dropdown-item ">
                        Dados do usuário
                    </button>
                </form>
            </li>
            <li>                              
                <form method="post" asp-controller="Account" asp-action="Logout">
                    <button type="submit" class="dropdown-item ">
                        Logout
                    </button>
                </form>              
            </li>
               
        </ul>
    </div>

           
    
}
else
{
    <ul class="nav-item">
        <a class="nav-link text-dark" asp-controller="Account" asp-action="Register">
            Registrar-se
        </a>
    </ul>

    <ul class="nav-item ">
        <a class="nav-link text-dark " asp-controller="Account" asp-action="Login">
            Login
        </a>
    </ul>
}